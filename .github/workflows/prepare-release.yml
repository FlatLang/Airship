name: Prepare Airship Release

on:
  release:
    types: [published, edited]

jobs:
  package:
    runs-on: ${{ matrix.release.os }}

    strategy:
      fail-fast: false
      matrix:
        release:
          - os: ubuntu-latest
          - os: windows-latest
          - os: macos-latest

    steps:
      - name: Download Airship ${{ github.event.release.tag_name }}
        uses: FlatLang/fetch-airship@master
        with:
          version: ${{ github.event.release.id }}

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 9
          run_install: false

      - name: Prepare binary
        run: |
          node --experimental-sea-config sea-config.json

      - name: Build windows binary
        if: ${{ matrix.release.os == 'windows-latest' }}
        run: |
          cp $(command -v node) airship-win.exe
          pnpm dlx postject airship-win.exe NODE_SEA_BLOB dist/sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2

      - name: Build macos binary
        if: ${{ matrix.release.os == 'macos-latest' }}
        run: |
          cp $(command -v node) airship-macos
          pnpm dlx postject airship-macos NODE_SEA_BLOB dist/sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2 --macho-segment-name NODE_SEA

      - name: Build linux binary
        if: ${{ matrix.release.os == 'ubuntu-latest' }}
        run: |
          cp $(command -v node) airship-linux
          pnpm dlx postject airship-linux NODE_SEA_BLOB dist/sea-prep.blob --sentinel-fuse NODE_SEA_FUSE_fce680ab2cc467b6e072b8b5df1996b2

      - name: Delete airship-win.exe Asset
        if: ${{ matrix.release.os == 'windows-latest' }}
        uses: mknejp/delete-release-assets@v1
        with:
          fail-if-no-assets: false
          token: ${{ github.token }}
          tag: ${{ github.event.release.tag_name }}
          repository: ${{ github.repository }}
          assets: airship-win.exe

      - name: Upload Windows Asset
        if: ${{ matrix.release.os == 'windows-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./airship-win.exe
          asset_name: airship-win.exe
          asset_content_type: application/octet-stream

      - name: Delete airship-macos Asset
        if: ${{ matrix.release.os == 'macos-latest' }}
        uses: mknejp/delete-release-assets@v1
        with:
          fail-if-no-assets: false
          token: ${{ github.token }}
          tag: ${{ github.event.release.tag_name }}
          repository: ${{ github.repository }}
          assets: airship-macos

      - name: Upload Mac Asset
        if: ${{ matrix.release.os == 'macos-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./airship-macos
          asset_name: airship-macos
          asset_content_type: application/octet-stream

      - name: Delete airship-linux Asset
        if: ${{ matrix.release.os == 'ubuntu-latest' }}
        uses: mknejp/delete-release-assets@v1
        with:
          fail-if-no-assets: false
          token: ${{ github.token }}
          tag: ${{ github.event.release.tag_name }}
          repository: ${{ github.repository }}
          assets: airship-linux

      - name: Upload Linux Asset
        if: ${{ matrix.release.os == 'ubuntu-latest' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./airship-linux
          asset_name: airship-linux
          asset_content_type: application/octet-stream

  compress:
    runs-on: ubuntu-latest
    needs: package

    strategy:
      matrix:
        compression:
          - algorithm: xz
            extension: xz
            replace_extension: false
            compression_level: 9
            content_type: application/octet-stream
          - algorithm: 7z
            extension: 7z
            replace_extension: true
            compression_level: 9
            content_type: application/octet-stream
          - algorithm: bzip2
            extension: bz2
            replace_extension: false
            compression_level: 9
            content_type: application/octet-stream
          - algorithm: gzip
            extension: gz
            replace_extension: false
            compression_level: 9
            content_type: application/x-gzip
          - algorithm: zip
            extension: zip
            replace_extension: true
            compression_level: 9
            content_type: application/x-zip-compressed

    steps:
      - name: Download airship.js ${{ github.event.release.tag_name }}
        uses: FlatLang/fetch-airship@master
        with:
          version: ${{ github.event.release.id }}

      - name: Download Windows Asset
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: ${{ github.repository }}
          file: airship-win.exe
          version: ${{ github.event.release.id }}

      - name: Download Mac Asset
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: ${{ github.repository }}
          file: airship-macos
          version: ${{ github.event.release.id }}

      - name: Download Linux Asset
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: ${{ github.repository }}
          file: airship-linux
          version: ${{ github.event.release.id }}

      - name: Install 7zip
        run: |
          sudo apt install p7zip-full p7zip-rar

      - name: Compress airship.js
        run: |
          7z \
            a \
            -mx=${{ matrix.compression.compression_level }} \
            -t${{ matrix.compression.algorithm }} \
            ${{ matrix.compression.replace_extension && 'airship.' || 'airship.js.' }}${{ matrix.compression.extension }} \
            airship.js

      - name: Delete ${{ matrix.compression.replace_extension && 'airship.' || 'airship.js.' }}${{ matrix.compression.extension }} Asset
        uses: mknejp/delete-release-assets@v1
        with:
          fail-if-no-assets: false
          token: ${{ github.token }}
          tag: ${{ github.event.release.tag_name }}
          repository: ${{ github.repository }}
          assets: ${{ matrix.compression.replace_extension && 'airship.' || 'airship.js.' }}${{ matrix.compression.extension }}

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.compression.replace_extension && 'airship.' || 'airship.js.' }}${{ matrix.compression.extension }}
          asset_name: ${{ matrix.compression.replace_extension && 'airship.' || 'airship.js.' }}${{ matrix.compression.extension }}
          asset_content_type: ${{ matrix.compression.content_type }}

      - name: Compress airship-win.exe
        run: |
          7z \
            a \
            -mx=${{ matrix.compression.compression_level }} \
            -t${{ matrix.compression.algorithm }} \
            ${{ matrix.compression.replace_extension && 'airship-win.' || 'airship-win.exe.' }}${{ matrix.compression.extension }} \
            airship-win.exe

      - name: Delete ${{ matrix.compression.replace_extension && 'airship-win.' || 'airship-win.exe.' }}${{ matrix.compression.extension }} Asset
        uses: mknejp/delete-release-assets@v1
        with:
          fail-if-no-assets: false
          token: ${{ github.token }}
          tag: ${{ github.event.release.tag_name }}
          repository: ${{ github.repository }}
          assets: ${{ matrix.compression.replace_extension && 'airship-win.' || 'airship-win.exe.' }}${{ matrix.compression.extension }}

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.compression.replace_extension && 'airship-win.' || 'airship-win.exe.' }}${{ matrix.compression.extension }}
          asset_name: ${{ matrix.compression.replace_extension && 'airship-win.' || 'airship-win.exe.' }}${{ matrix.compression.extension }}
          asset_content_type: ${{ matrix.compression.content_type }}

      - name: Compress airship-macos
        run: |
          7z \
            a \
            -mx=${{ matrix.compression.compression_level }} \
            -t${{ matrix.compression.algorithm }} \
            airship-macos.${{ matrix.compression.extension }} \
            airship-macos

      - name: Delete airship-macos.${{ matrix.compression.extension }} Asset
        uses: mknejp/delete-release-assets@v1
        with:
          fail-if-no-assets: false
          token: ${{ github.token }}
          tag: ${{ github.event.release.tag_name }}
          repository: ${{ github.repository }}
          assets: airship-macos.${{ matrix.compression.extension }}

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./airship-macos.${{ matrix.compression.extension }}
          asset_name: airship-macos.${{ matrix.compression.extension }}
          asset_content_type: ${{ matrix.compression.content_type }}

      - name: Compress airship-linux
        run: |
          7z \
            a \
            -mx=${{ matrix.compression.compression_level }} \
            -t${{ matrix.compression.algorithm }} \
            airship-linux.${{ matrix.compression.extension }} \
            airship-linux

      - name: Delete airship-linux.${{ matrix.compression.extension }} Asset
        uses: mknejp/delete-release-assets@v1
        with:
          fail-if-no-assets: false
          token: ${{ github.token }}
          tag: ${{ github.event.release.tag_name }}
          repository: ${{ github.repository }}
          assets: airship-linux.${{ matrix.compression.extension }}

      - name: Upload Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./airship-linux.${{ matrix.compression.extension }}
          asset_name: airship-linux.${{ matrix.compression.extension }}
          asset_content_type: ${{ matrix.compression.content_type }}
