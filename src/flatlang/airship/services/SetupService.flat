package flatlang/airship/services

import flat/log/Logger

import flatlang/airship/Airship
import flatlang/airship/PackageSource
import flatlang/datastruct/HashSet
import flatlang/datastruct/Pair
import flatlang/io/File
import flatlang/git/Git
import flatlang/airship/InvalidFlatJsonException
import flatlang/airship/ExecutionFailureException
import flatlang/airship/GitHubDependency
import flat/regedit/RegEdit
import flat/path/Path

import static flat/readline/ReadLine
import static flat/colorizer/Colorizer

class {
  let static Logger log = Logger(SetupService.class, lineLength: 65)

  public construct(
    private Airship airship,
    private DependencyService dependencyService,
    private UpdateService updateService
  ) {}

  public async setup() {
    let airshipDependency = GitHubDependency("github:FlatLang/Airship", "master")

    if (dependencyService.isDependencyInstalled(airshipDependency)) {
      log.info("Airship already installed. Checking for updates")
      updateService.updateGitPackage(airshipDependency, build: true)
    } else {
      log.info("Installing Airship")
      airship.installService.installGitPackage(airshipDependency)
    }

    let flatHome = File(Airship.flatHome)
    let pathValue = File(flatHome, "bin").nativeLocation

    log.info("|
      The Flat home directory is located at:

        #{underscore(flatHome.nativeLocation)}

      This can be modified with the FLAT_HOME environment variable.

      The 'airship' command and others will be added to Flat's bin directory, located at:

        #{underscore(pathValue)}

      |")

    if (System.OS_INT == System.WINDOWS) {
      log.info("|
        This path will then be added to your PATH environment variable by modifying the HKEY_CURRENT_USER/Environment/PATH registry key

        |")

      RegEdit.setExternalVBSLocation("#{airshipDependency.getLocation()}/node_modules/regedit/vbs")

      Path.prependToUserPath(pathValue)

      log.info("|
        Flat is installed now!

        To get started you may need to restart your current shell. This would reload its PATH environment variable to include Airship's bin directory (#{underscore(pathValue)}).

        |")

      question("Press the Enter key to continue.")
    } else {
      let files = Path.getUserShellRunCommandsFiles().map({ _.nativeLocation })

      if (files.count == 0) {
        log.error("|
          This user does not seem to have any valid initialization script files (e.g. ~/.bashrc, ~/.zshrc, ...)

          |")
        log.error("|
          To finish installation, you will need to manually add \"#{underscore(pathValue)}\" to your path, howewer you see fit.

          |")
      } else {
        log.info("|
          This path will then be added to your PATH environment variable by modifying the profile files located at:

            #{files.map(x => underscore(x)).join("\n  ")}

          |")

        Path.appendToUserPath(pathValue)

        log.info("|
          Flat is installed now!

          To get started you may need to restart your current shell. This would reload its PATH environment variable to include Airship's bin directory (#{underscore(pathValue)}).

          To configure your current shell, run:
          source \"#{files.first}\"
          |")
      }
    }
  }
}