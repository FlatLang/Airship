package flat/airship

import flat/time/Timer
import flat/io/FancyOutputStream

import novex/nest/TestResult

[TestSuite [
  Airship_Test
]]
class {
  public static async main(String args[]) {
    let test = Airship_TestSuite()

    Timer timer = Timer().start()

    let results = new TestResult[]

    let suites = args.skip(2)

    test.runTests({
      results.add(_)
    })

    let fancy = FancyOutputStream(headerPattern: "/\\")

    let unsuccessful = results.filter({ !_.success })

    if (unsuccessful.count > 0) {
      fancy.writeHeader("#unsuccessful.count Failure#{unsuccessful.count == 1 ? "" : "s"} out of #results.count test#{results.count == 1 ? "" : "s"}", pattern: ":'( ", symmetrical: true)

      unsuccessful.forEach({
        Console.log("#_")
      })
    } else {
      fancy.writeHeader("All #results.count Successful", pattern: ":) ", symmetrical: true)
    }

    timer.stop()

    Console.writeLine("Took " + timer.duration + "ms")

    if (unsuccessful.count > 0) {
        System.exit(1)
    }
  }
}