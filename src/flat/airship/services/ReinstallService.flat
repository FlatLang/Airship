package flat/airship/services

import flat/log/Logger
import flat/io/File

import flat/airship/Airship
import flat/airship/InvalidCommandException
import flat/airship/GitHubDependency

class {
  static Logger log = Logger(ReinstallService.class)

  public construct(private Airship airship) {}

  public async reinstall() {
    if (airship.reinstallCommand["installationTarget"].values.isEmpty) {
      airship.uninstallLinkArg.enabled = airship.reinstallLinkArg.enabled
      airship.installLinkArg.enabled = airship.reinstallLinkArg.enabled
      airship.uninstallService.uninstall()
      airship.installService.install()
      return
    }

    for (package in airship.reinstallCommand["installationTarget"].values) {
      reinstall(package)
    }
  }

  async reinstall(String package) {
    if (package.endsWith(".git")) {
      reinstallGitPackage(package)
    } else {
      throw InvalidCommandException("Cannot reinstall package '#package'")
    }
  }

  async reinstallGitPackage(String url) {
    airship.uninstallService.uninstallGitPackage(url)
    airship.installService.installDependency(GitHubDependency(url, "master"))
  }
}