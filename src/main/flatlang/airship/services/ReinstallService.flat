package "flatlang/airship/services"

import "flatlang/io/File"
import "flatlang/airship/Airship"
import "flatlang/airship/InvalidCommandException"

class {
  public construct(private Airship airship) {}

  public async reinstall() -> Int[] {
    let exitCodes = new Array<Int>()

    if (airship.reinstallCommand.values.isEmpty) {
      let uninstallCodes = await airship.uninstallService.uninstall()
      return uninstallCodes.plus(await airship.installService.install())
    }

    for (package in airship.reinstallCommand.values) {
      exitCodes.addAll(await reinstall(package))
    }

    return exitCodes
  }

  async reinstall(String package) -> Int[] {
    if (package.endsWith(".git")) {
      return await reinstallGitPackage(package)
    } else {
      throw new InvalidCommandException("Cannot reinstall package '#package'")
    }
  }

  async reinstallGitPackage(String url) -> Int[] {
    return [
      await airship.uninstallService.uninstallGitPackage(url),
      await airship.installService.installGitPackage(url, "master")
    ]
  }
}