package "flatlang/airship/services"

import "flat/log/Logger"

import "flatlang/io/File"
import "flatlang/airship/Airship"
import "flatlang/airship/PackageSource"

class {
  let static Logger log = Logger(CleanService.class)

  public construct(private Airship airship) {}

  public async clean() {
    let mainDirectory = airship.mainSource?.outDirectory
    let testDirectory = airship.testSource?.outDirectory

    if (mainDirectory) {
      clean(airship.mainSource)
    }
    if (testDirectory && mainDirectory != testDirectory) {
      clean(airship.testSource)
    }
  }

  public async clean(PackageSource source) {
    let location = "#{airship.packageLocation.normalizedLocation}/#{source.outDirectory}"
    let outDirectory = File(location)

    try {
      outDirectory.delete(recursive: true)
    } catch (Exception e) {
      throw Exception("Failed to clean directory '#{outDirectory.normalizedLocation}'")
    }
  }
}